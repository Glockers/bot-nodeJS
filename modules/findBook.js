const {
    getIngoPage
} = require('../parser')


const {
    optsFindBook,
    listCommand,
    mainOpts,
    returnMain
} = require('../option')

const {
    bot
} = require("../botConfig");

module.exports = {
    setQuestion: async function (ChatId, callback) {

        await bot.sendMessage(ChatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ')
        // bot.removeListener('message')
        
        await bot.once('message', msg => {
            // bot.removeListener('message')

            console.log('module –Ω–µ –Ω–∞–π–¥–µ–Ω')
            callback(msg);
        })
    },

    getFindBook: function (bookName, chatId) {

        const encoded = encodeURI(bookName);
        const url = `https://limbook.net/search/?query=${encoded}`
        console.log("–°—Å—ã–ª–∫–∞: " + url)

        return getIngoPage(url).then(t => {

            t = t.filter(item => {
                if (item.description != "") return true;
            })

            if (t.length == 0) {
                bot.sendMessage(chatId, "‚õîÔ∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", optsFindBook)
                return false;
            }

            let descriptionList = []
            for (let i = 0; i < t.length; i++) {
                t[i].description = (i + 1) + '. ' + t[i].description;
                descriptionList.push(`${t[i].description}   /  ${t[i].author}`)
            }
            bot.sendMessage(chatId, `üëÄüìö –ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–Ω–∏–≥–∏:\n\n\n` + descriptionList.join("\n"))

            return t.length;
        })
    }


}